// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "reverseme.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace example {
namespace reverseme {

namespace {

const ::google::protobuf::Descriptor* SomeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SomeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SomeData_OtherData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SomeData_OtherData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_reverseme_2eproto() {
  protobuf_AddDesc_reverseme_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "reverseme.proto");
  GOOGLE_CHECK(file != NULL);
  SomeData_descriptor_ = file->message_type(0);
  static const int SomeData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SomeData, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SomeData, comment_),
  };
  SomeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SomeData_descriptor_,
      SomeData::default_instance_,
      SomeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SomeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SomeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SomeData));
  SomeData_OtherData_descriptor_ = SomeData_descriptor_->nested_type(0);
  static const int SomeData_OtherData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SomeData_OtherData, test_),
  };
  SomeData_OtherData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SomeData_OtherData_descriptor_,
      SomeData_OtherData::default_instance_,
      SomeData_OtherData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SomeData_OtherData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SomeData_OtherData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SomeData_OtherData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_reverseme_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SomeData_descriptor_, &SomeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SomeData_OtherData_descriptor_, &SomeData_OtherData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_reverseme_2eproto() {
  delete SomeData::default_instance_;
  delete SomeData_reflection_;
  delete SomeData_OtherData::default_instance_;
  delete SomeData_OtherData_reflection_;
}

void protobuf_AddDesc_reverseme_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017reverseme.proto\022\025com.example.reverseme"
    "\"r\n\010SomeData\0227\n\004data\030\001 \002(\0132).com.example"
    ".reverseme.SomeData.OtherData\022\017\n\007comment"
    "\030\002 \001(\t\032\034\n\tOtherData\022\017\n\004test\030\001 \002(\005:\0011", 156);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "reverseme.proto", &protobuf_RegisterTypes);
  SomeData::default_instance_ = new SomeData();
  SomeData_OtherData::default_instance_ = new SomeData_OtherData();
  SomeData::default_instance_->InitAsDefaultInstance();
  SomeData_OtherData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_reverseme_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_reverseme_2eproto {
  StaticDescriptorInitializer_reverseme_2eproto() {
    protobuf_AddDesc_reverseme_2eproto();
  }
} static_descriptor_initializer_reverseme_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int SomeData_OtherData::kTestFieldNumber;
#endif  // !_MSC_VER

SomeData_OtherData::SomeData_OtherData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SomeData_OtherData::InitAsDefaultInstance() {
}

SomeData_OtherData::SomeData_OtherData(const SomeData_OtherData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SomeData_OtherData::SharedCtor() {
  _cached_size_ = 0;
  test_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SomeData_OtherData::~SomeData_OtherData() {
  SharedDtor();
}

void SomeData_OtherData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SomeData_OtherData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SomeData_OtherData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SomeData_OtherData_descriptor_;
}

const SomeData_OtherData& SomeData_OtherData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reverseme_2eproto();  return *default_instance_;
}

SomeData_OtherData* SomeData_OtherData::default_instance_ = NULL;

SomeData_OtherData* SomeData_OtherData::New() const {
  return new SomeData_OtherData;
}

void SomeData_OtherData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    test_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SomeData_OtherData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 test = 1 [default = 1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SomeData_OtherData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 test = 1 [default = 1];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->test(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SomeData_OtherData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 test = 1 [default = 1];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->test(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SomeData_OtherData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 test = 1 [default = 1];
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->test());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SomeData_OtherData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SomeData_OtherData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SomeData_OtherData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SomeData_OtherData::MergeFrom(const SomeData_OtherData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SomeData_OtherData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SomeData_OtherData::CopyFrom(const SomeData_OtherData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SomeData_OtherData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void SomeData_OtherData::Swap(SomeData_OtherData* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SomeData_OtherData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SomeData_OtherData_descriptor_;
  metadata.reflection = SomeData_OtherData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::std::string SomeData::_default_comment_;
#ifndef _MSC_VER
const int SomeData::kDataFieldNumber;
const int SomeData::kCommentFieldNumber;
#endif  // !_MSC_VER

SomeData::SomeData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SomeData::InitAsDefaultInstance() {
  data_ = const_cast< ::com::example::reverseme::SomeData_OtherData*>(&::com::example::reverseme::SomeData_OtherData::default_instance());
}

SomeData::SomeData(const SomeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SomeData::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  comment_ = const_cast< ::std::string*>(&_default_comment_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SomeData::~SomeData() {
  SharedDtor();
}

void SomeData::SharedDtor() {
  if (comment_ != &_default_comment_) {
    delete comment_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void SomeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SomeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SomeData_descriptor_;
}

const SomeData& SomeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reverseme_2eproto();  return *default_instance_;
}

SomeData* SomeData::default_instance_ = NULL;

SomeData* SomeData::New() const {
  return new SomeData;
}

void SomeData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (data_ != NULL) data_->::com::example::reverseme::SomeData_OtherData::Clear();
    }
    if (_has_bit(1)) {
      if (comment_ != &_default_comment_) {
        comment_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SomeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.example.reverseme.SomeData.OtherData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_comment;
        break;
      }
      
      // optional string comment = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_comment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SomeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .com.example.reverseme.SomeData.OtherData data = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }
  
  // optional string comment = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->comment(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SomeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .com.example.reverseme.SomeData.OtherData data = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }
  
  // optional string comment = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->comment(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SomeData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.example.reverseme.SomeData.OtherData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }
    
    // optional string comment = 2;
    if (has_comment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SomeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SomeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SomeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SomeData::MergeFrom(const SomeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_data()->::com::example::reverseme::SomeData_OtherData::MergeFrom(from.data());
    }
    if (from._has_bit(1)) {
      set_comment(from.comment());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SomeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SomeData::CopyFrom(const SomeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SomeData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  return true;
}

void SomeData::Swap(SomeData* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(comment_, other->comment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SomeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SomeData_descriptor_;
  metadata.reflection = SomeData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace reverseme
}  // namespace example
}  // namespace com

// @@protoc_insertion_point(global_scope)
